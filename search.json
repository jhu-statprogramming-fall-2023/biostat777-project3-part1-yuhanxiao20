[{"path":"/articles/analysis.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Example Analysis","text":"vignette, analyze dataset estimated salary college students. goal demonstrate functions R package bbplot wrangle plot example data TidyTuesday. Question: early career pay differ across U.S.? relationship early career pay mid career pay? relationship early career pay STEM percent student body? Audience: R package bbplot users interested seeing example data wrangling visualizations. Dataset: obtained original dataset TidyTuesday. Data dictionary: referred data dictionary TidyTuesday.","code":""},{"path":[]},{"path":"/articles/analysis.html","id":"step-1-load-packages","dir":"Articles","previous_headings":"Data Analysis","what":"Step 1: load packages","title":"Example Analysis","text":"","code":"library(bbplot) library(here) library(readr) library(tidyverse) library(ggplot2) library(maps) library(purrr)"},{"path":"/articles/analysis.html","id":"step-2-load-data","dir":"Articles","previous_headings":"Data Analysis","what":"Step 2: load data","title":"Example Analysis","text":"","code":"# check if a directory named data exists locally if (!dir.exists(here(\"data\"))) {   # if not, create it programmatically   dir.create(here(\"data\")) }  # check whether we have the input data if (!file.exists(here(\"data\", \"salary_potential.rda\"))) {     # If we don't, then download the data     salary_potential <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv\")      save(salary_potential, file = here(\"data\", \"salary_potential.rda\")) }  # load the data load(here(\"data\", \"salary_potential.rda\"))"},{"path":"/articles/analysis.html","id":"step-3-data-wrangling","dir":"Articles","previous_headings":"Data Analysis","what":"Step 3: data wrangling","title":"Example Analysis","text":"","code":"# check the content of the data set head(salary_potential) #> # A tibble: 6 × 7 #>    rank name   state_name early_career_pay mid_career_pay make_world_better_pe…¹ #>   <dbl> <chr>  <chr>                 <dbl>          <dbl>                  <dbl> #> 1     1 Aubur… Alabama               54400         104500                     51 #> 2     2 Unive… Alabama               57500         103900                     59 #> 3     3 The U… Alabama               52300          97400                     50 #> 4     4 Tuske… Alabama               54500          93500                     61 #> 5     5 Samfo… Alabama               48400          90500                     52 #> 6     6 Sprin… Alabama               46600          89100                     53 #> # ℹ abbreviated name: ¹​make_world_better_percent #> # ℹ 1 more variable: stem_percent <dbl> map_chr(salary_potential, .f = typeof) #>                      rank                      name                state_name  #>                  \"double\"               \"character\"               \"character\"  #>          early_career_pay            mid_career_pay make_world_better_percent  #>                  \"double\"                  \"double\"                  \"double\"  #>              stem_percent  #>                  \"double\" map_int(salary_potential, .f = ~ length(unique(.x))) #>                      rank                      name                state_name  #>                        25                       934                        50  #>          early_career_pay            mid_career_pay make_world_better_percent  #>                       310                       453                        59  #>              stem_percent  #>                        74 # calculate the average estimated early career pay salary_st_avg <- salary_potential %>%   select(name, state_name, early_career_pay) %>%   rename(region = state_name) %>%   mutate(region = tolower(region)) %>%   group_by(region) %>%   summarise(     avg_early_career_pay = mean(early_career_pay)   )    # find coordinates for us states us_map <- map_data(\"state\") %>%   mutate(region = gsub(\" \", \"-\", region))  # add salary info to the map map_salary_st_avg <- us_map %>%   left_join(salary_st_avg, by = join_by(region)) # select salary info from states of interest salary <- salary_potential %>%   select(state_name, early_career_pay, mid_career_pay) %>%   rename(state = state_name) %>%   mutate(state = tolower(state))   # break the data set down into groups defined by states by_state <- split(salary, salary$state)  # calculate average early pay and mid pay for each state early_pay <- map_dbl(by_state, ~ mean(.x$early_career_pay, na.rm=TRUE)) mid_pay <- map_dbl(by_state, ~ mean(.x$mid_career_pay, na.rm=TRUE))  # combine average pay into a table pay_trend <- tibble(   state = names(early_pay),   avg_early_pay = early_pay,   avg_mid_pay = mid_pay ) # select salary info from states of interest pay_stem_trend <- salary_potential %>%   rename(state = state_name) %>%   mutate(state = tolower(state)) %>%   filter(state %in% c(\"california\", \"michigan\", \"maryland\", \"washington\"))"},{"path":"/articles/analysis.html","id":"step-4-data-visualization","dir":"Articles","previous_headings":"Data Analysis","what":"Step 4: data visualization","title":"Example Analysis","text":"Note: 48 states District Columbia (D.C.) included map. Alaska Hawaii included map.  Note: added captions axis labels. plot, however, show components follows BBC style.","code":"# plot the average estimated early career pay across the US map_salary_st_avg %>% ggplot() +   geom_polygon(aes(x = long, y = lat, group = group, fill = avg_early_career_pay)) +   scale_fill_gradient(low = \"#FAAB18\", high = \"#1380A1\") +  # Adjust the color scale   labs(title = \"The Average Estimated Early Career Salary Across the U.S.\", subtitle = str_wrap(\"California, Texas, and the states in the northeastern region have higher estimated early career pay compared to states in the central portion of the U.S.\", 60), caption = \"Yuhan Xiao\", fill = \"Salary\") +   theme_void(base_size = 14) +   theme(plot.title = element_text(hjust = 0.5, vjust = 1, size = 15),          plot.subtitle = element_text(hjust = 0.5),         plot.background = element_rect(fill = \"white\"),         text = element_text(family = \"Times\")) # plot the association between average early career pay to average mid career pay pay_trend_plot <- pay_trend %>%    ggplot() +   geom_point(aes(x = avg_early_pay, y = avg_mid_pay)) +   labs(title = str_wrap(\"The Association Between Average Estimated Early Career Salary and Mid Career Salary by State\", 30), subtitle = str_wrap(\"A higher early career salary is associated with a higher mid career salary\", 40), x = \"average early career salary\", y = \"average mid career salary\", caption = \"Yuhan Xiao\") +   bbc_style()   # save the plot to local folder finalise_plot(plot_name = pay_trend_plot,   source = \"Source: TidyTuesday\",   save_filepath = here(\"data\",\"pay_trend-nc.png\"),   width_pixels = 640,   height_pixels = 550,   logo_image_path = here(\"data\",\"placeholder.png\")) pay_stem_trend %>% ggplot(aes(x=stem_percent, y = early_career_pay, color = state)) +   geom_point() +   geom_smooth() +    facet_wrap(~state, nrow = 2) +   labs(title = str_wrap(\"The Association Between Average Estimated Early Career Salary and Percent of STEM students by State\", 60), subtitle = str_wrap(\"A higher percent of student body in STEM is associated with a higher estimated early career salary\", 60), x = \"STEM percent\", y = \"average early career salary\", caption = \"Yuhan Xiao\") +   theme_minimal(base_size = 14) +   theme(plot.title = element_text(hjust = 0.5, vjust = 1, size = 15),          plot.subtitle = element_text(hjust = 0.5),         axis.text.x = element_text(angle = 0, hjust = 1),         plot.background = element_rect(fill = \"white\"),         text = element_text(family = \"Times\"),         legend.position = \"none\")"},{"path":"/articles/analysis.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Example Analysis","text":"Colleges higher estimated early career salary students located California, Texas, northeastern region higher percent student body STEM. higher early career salary associated higher mid career salary.","code":""},{"path":"/articles/analysis.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Example Analysis","text":"bbplot: bbc_style(), finalise_plot() dplyr: select(), group_by(), summarise(), mutate(), rename(), filter(), left_join(), join_by() stringr: str_wrap() purrr: map_dbl(), map_chr(), map_int() ggplot2: geom_polygon(), geom_point(), geom_smooth(), facet_wrap()","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nassos Stylianou. Author, maintainer. Clara Guibourg. Author. Dahlgreen. Author. Robert Cuffe. Author. Tom Calver. Author. Ransome Mpini. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stylianou N, Guibourg C, Dahlgreen W, Cuffe R, Calver T, Mpini R (2019). bbplot: MAKING GGPLOT GRAPHICS BBC NEWS STYLE. https://github.com/bbc/bbplot.","code":"@Manual{,   author = {Nassos Stylianou and Clara Guibourg and Will Dahlgreen and Robert Cuffe and Tom Calver and Ransome Mpini},   title = {bbplot: MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE},   year = {2019},   url = {https://github.com/bbc/bbplot}, }"},{"path":"/index.html","id":"information","dir":"","previous_headings":"","what":"Information","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"Author: Yuhan Xiao (website example data analysis). Original author: Nassos Stylianou, Clara Guibourg, Dahlgreen, Robert Cuffe, Tom Calver, Ransome Mpini (package). URL GitHub link original R package came : https://github.com/bbc/bbplot. URL deployed website: https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yuhanxiao20/. Description 5 customized things pkgdown website: used bootswatch set theme - simplex - bootstrap. used bslib customize height navigation bar 100px. set development mode auto. used sidebar structure add GitHub link next search box. used author href add email links author names.","code":""},{"path":"/index.html","id":"bbplot","dir":"","previous_headings":"","what":"BBPLOT","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"repo contains functions bbplot package, installed locally, provides helpful functions creating exporting graphics made ggplot style used BBC News data team. Example graphics created using bbplot package","code":""},{"path":"/index.html","id":"installing-bbplot","dir":"","previous_headings":"","what":"Installing bbplot","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"bbplot CRAN, install directly Github using devtools. devtools package installed, run first line code well.","code":"# install.packages('devtools') devtools::install_github('bbc/bbplot')"},{"path":"/index.html","id":"using-the-functions","dir":"","previous_headings":"","what":"Using the functions","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"package two functions plots: bbc_style() finalise_plot. Detailed examples use functions included within bbplot package produce graphics included R cookbook, well general reference manual working ggplot2. basic explanation summary :","code":""},{"path":"/index.html","id":"bbc_style","dir":"","previous_headings":"Using the functions","what":"bbc_style()","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"bbc_style(): arguments added ggplot chain created plot. generally makes text size, font colour, axis lines, axis text many standard chart components BBC style, formulated together Visual Journalism design team. function pretty basic change adapt based type chart making, cases need make additional theme arguments ggplot chain want make additions changes style, example add remove gridlines etc. Also note colours lines case line chart bars bar chart, come box bbc_style function, need explicitly set standard ggplot chart functions. Example used standard workflow:","code":"line <- ggplot(line_df, aes(x = year, y = lifeExp)) + geom_line(colour = \"#007f7f\", size = 1) + geom_hline(yintercept = 0, size = 1, colour=\"#333333\") + bbc_style()"},{"path":"/index.html","id":"finalise_plot","dir":"","previous_headings":"Using the functions","what":"finalise_plot","title":"MAKING GGPLOT GRAPHICS IN BBC NEWS STYLE","text":"finalise_plot: save plot correct guidelines publication BBC News graphic. made functions left align title, subtitle source, add BBC blocks bottom right save specified location. function six arguments, three need explicitly set three defaults unless overwrite . function arguments: finalise_plot(plot_name, source_name, save_filepath, width_pixels, height_pixels, logo_image_path) plot_name: variable name called plot, example chart example plot_name \"line\" source_name: source text want appear bottom left corner plot. need type word \"Source:\" , just source, example source = \"Source: ONS\" right way . save_filepath: precise filepath want graphic save , including .png extension end. depend working directory specific R project. example relative filepath : /charts/line_chart.png. width_pixels: set 640px default, call argument specify width want chart . height_pixels: set 450px default, call argument specify height want chart . logo_image_path: argument specifies path image/logo bottom right corner plot. default placeholder PNG file background matches background colour plot, specify argument want appear without logo. want add logo, just specify path PNG file. package prepared wide thin image mind. Example finalise_plot() used standard workflow. function called created finalised chart data, titles added bbc_style() (see ):","code":"finalise_plot(plot_name = my_line_plot, source = \"Source: ONS\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 550)"},{"path":"/reference/bbc_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bbc theme to ggplot chart — bbc_style","title":"Add bbc theme to ggplot chart — bbc_style","text":"function allows add bbc theme ggplotgraphics.","code":""},{"path":"/reference/bbc_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bbc theme to ggplot chart — bbc_style","text":"","code":"bbc_style()"},{"path":"/reference/bbc_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bbc theme to ggplot chart — bbc_style","text":"","code":"line <- ggplot(line_df, aes(x = year, y = lifeExp)) + geom_line(colour = \"#007f7f\", size = 1) + geom_hline(yintercept = 0, size = 1, colour=\"#333333\") + bbc_style() #> Error in ggplot(line_df, aes(x = year, y = lifeExp)): could not find function \"ggplot\""},{"path":"/reference/finalise_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange alignment and save BBC ggplot chart — finalise_plot","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"Running function save plot correct guidelines publication BBC News graphic. left align title, subtitle source, add BBC blocks bottom right save specified location.","code":""},{"path":"/reference/finalise_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"","code":"finalise_plot(plot_name, source_name, save_filepath, width_pixels = 640,   height_pixels = 450, logo_image_path = file.path(system.file(\"data\",   package = \"bbcggplotr\"), \"bbc_blocks_r.png\"))"},{"path":"/reference/finalise_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"plot_name variable name plot created want format save source_name text want come text 'Source:' bottom left hand side side save_filepath Exact filepath want plot saved width_pixels Width pixels want save chart - defaults 640 height_pixels Height pixels want save chart - defaults 450 logo_image_path File path logo image want use right hand side chart, needs PNG file - defaults BBC blocks image sits within data folder package","code":""},{"path":"/reference/finalise_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange alignment and save BBC ggplot chart — finalise_plot","text":"","code":"finalise_plot(plot_name = myplot, source = \"The source for my data\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 450, logo_image_path = \"logo_image_filepath.png\" ) #> Error in png::readPNG(logo_image_path): unable to open logo_image_filepath.png"}]
